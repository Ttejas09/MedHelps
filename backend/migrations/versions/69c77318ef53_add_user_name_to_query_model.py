"""Add user_name to Query model

Revision ID: 69c77318ef53
Revises: 
Create Date: 2025-10-18 14:28:05.039901

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '69c77318ef53'
down_revision = None
branch_labels = None
depends_on = None


# --- THIS IS THE CORRECT, MANUALLY EDITED CODE ---
def upgrade():
    # ### commands auto-generated by Alembic - please adjust! ###
    with op.batch_alter_table('query', schema=None) as batch_op:
        # Step 1: Add the column as NULLABLE first
        batch_op.add_column(sa.Column('user_name', sa.String(length=80), nullable=True))

    # Step 2: Backfill the data from the 'user' table
    # Note: 'user' is a keyword, so we wrap it in quotes
    op.execute(
        'UPDATE query '
        'SET user_name = (SELECT username FROM "user" WHERE "user".id = query.user_id)'
    )

    with op.batch_alter_table('query', schema=None) as batch_op:
        # Step 3: Now that data is backfilled, make the column NOT NULL
        batch_op.alter_column('user_name', existing_type=sa.String(length=80), nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('query', schema=None) as batch_op:
        batch_op.alter_column('user_name',
               existing_type=sa.String(length=80),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)

    with op.batch_alter_table('medicine', schema=None) as batch_op:
        batch_op.add_column(sa.Column('timestamp', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True))

    # ### end Alembic commands ###
